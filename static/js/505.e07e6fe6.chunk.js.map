{"version":3,"file":"static/js/505.e07e6fe6.chunk.js","mappings":"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","sources":["components/App.styled.jsx","components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactListItem/ContactListItem.styled.jsx","components/UpdateDialog/UpdateDialog.styled.jsx","components/UpdateDialog/UpdateDialog.jsx","components/ContactList/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  /* box-shadow: rgb(182 182 182) 2px 10px 20px; */\n  width: 100%;\n  padding: ${p => p.theme.space[4]};\n  text-align: center;\n\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: ${p => p.theme.space[6]};\n`;\n\nexport const MainTitle = styled.h1`\n  font-size: ${p => p.theme.fontsSizes.xl}px;\n  padding-bottom: ${p => p.theme.space[3]};\n\n  /* color: ${p => p.theme.colors.bgGrey}; */\n`;\n\nexport const SecondaryTitle = styled.h2`\n  font-size: ${p => p.theme.fontsSizes.l}px;\n  padding-bottom: ${p => p.theme.space[4]};\n`;\n\nexport const HomeImage = styled.img`\n  width: 480px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n","import styled from '@emotion/styled';\n\nexport const WatchWrapper = styled.div`\n  width: 100%;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n","import { WatchWrapper } from './Loader.styled';\nimport { Watch } from 'react-loader-spinner';\n\nexport function Loader({ color }) {\n  return (\n    <WatchWrapper>\n      <Watch\n        height=\"64\"\n        width=\"64\"\n        radius=\"48\"\n        color={color}\n        ariaLabel=\"watch-loading\"\n        wrapperStyle={{}}\n        wrapperClassName=\"\"\n        visible={true}\n      />\n    </WatchWrapper>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  width: 500px;\n  margin-bottom: ${p => p.theme.space[3]};\n  padding: ${p => p.theme.space[3]};\n  border: 1px solid ${p => p.theme.colors.grey};\n  border-radius: ${p => p.theme.radii.generic};\n\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const Label = styled.label`\n  display: block;\n\n  margin-bottom: ${p => p.theme.space[3]};\n\n  font-size: ${p => p.theme.fontsSizes.m}px;\n  font-weight: ${p => p.theme.fontWeights.semiBold}; ;\n`;\n\nexport const Input = styled.input`\n  display: block;\n\n  margin: ${p => p.theme.space[2]} auto ${p => p.theme.space[0]};\n  width: 320px;\n  padding: ${p => p.theme.space[2]};\n\n  font-size: ${p => p.theme.fontsSizes.s}px;\n\n  border: 1px solid transparent;\n  border-radius: ${p => p.theme.radii.semiRound};\n  background-color: ${p => p.theme.colors.bgGrey};\n\n  transition: border 250ms ease-out 0s, background-color 250ms ease-out 0s;\n\n  &:focus-within {\n    border: 1px solid ${p => p.theme.colors.grey};\n    background-color: rgb(245, 248, 250);\n    filter: drop-shadow(${p => p.theme.colors.accentShadow} 0px 4px 4px);\n    outline: none;\n  }\n\n  :focus::placeholder {\n    color: transparent;\n  }\n`;\n\nexport const AddContactButton = styled.button`\n  min-width: 80px;\n  height: 40px;\n\n  padding: 4px 16px;\n\n  color: ${p => p.theme.colors.black};\n  background-color: ${p => p.theme.colors.bgGrey};\n\n  font-size: ${p => p.theme.fontsSizes.m}px;\n  font-weight: ${p => p.theme.fontWeights.semiBold};\n\n  border: 2px solid ${p => p.theme.colors.accentShadow};\n  border-radius: ${p => p.theme.radii.semiRound};\n\n  cursor: pointer;\n  transition: background-color 250ms ease-out 0s, border-color 250ms ease-out 0s;\n\n  &:hover,\n  :focus {\n    background-color: ${p => p.theme.colors.accentShadow};\n    border: 2px solid transparent;\n  }\n`;\n","import { capitalizeFirstLetters } from '../Utils/capitalizeFirstLetters';\nimport { addContactAsyncThunk } from '../../redux/contacts/contactsOperations';\n\nimport { Form, Label, Input, AddContactButton } from './ContactForm.styled';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts, selectStatus } from 'redux/selectors';\nimport { Notify } from 'notiflix';\n\nexport const ContactForm = () => {\n  const contacts = useSelector(selectContacts);\n  const state = useSelector(selectStatus);\n\n  const dispatch = useDispatch();\n\n  const checkTheSameName = inputName => {\n    if (!contacts) return;\n\n    const normaliziedInputName = inputName.toLowerCase().trim();\n    // console.log(normaliziedInputName);\n\n    return contacts.find(\n      ({ name }) => name.toLowerCase() === normaliziedInputName\n    );\n  };\n\n  const onSubmit = event => {\n    event.preventDefault();\n\n    const data = new FormData(event.target);\n\n    const formObject = Object.fromEntries(data.entries());\n\n    const { name: inputName, number: inputNumber } = formObject;\n\n    const capitalName = capitalizeFirstLetters(inputName);\n\n    if (checkTheSameName(inputName)) {\n      alert(`Sorry, ${capitalName} has already added!`);\n      return;\n    }\n\n    Notify.success('Contact added!');\n\n    dispatch(addContactAsyncThunk({ name: capitalName, number: inputNumber }));\n\n    // setName(inputName);\n    // setNumber(inputNumber);\n\n    event.currentTarget.reset();\n  };\n\n  // const onInputChange = event => {\n  //   const { name: nameItem, number: numberItem } = event.target;\n  // };\n\n  return (\n    <Form onSubmit={onSubmit}>\n      <Label>\n        Name\n        <Input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"FirstName LastName\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я-яЁёІіЇїЄє]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          // autoFocus\n          // onChange={onInputChange}\n        />\n      </Label>\n      <Label>\n        Number\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          placeholder=\"123-45-67\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          // onChange={onInputChange}\n        />\n      </Label>\n      <AddContactButton type=\"submit\" disabled={state === 'loading'}>\n        {/* {state === 'loading' ? 'Adding...' : 'Add contacts'} */}\n        Add contacts\n      </AddContactButton>\n    </Form>\n  );\n};\n","import styled from '@emotion/styled';\nimport { FcContacts } from 'react-icons/fc';\n\nexport const Icon = styled(FcContacts)`\n  width: ${p => p.theme.space[5]};\n  height: ${p => p.theme.space[5]};\n`;\n\nexport const ListItem = styled.li`\n  display: grid;\n  grid-template-columns:\n    ${p => p.theme.space[5]}\n    1fr\n    ${p => p.theme.space[6]}\n    ${p => p.theme.space[6]};\n  grid-template-rows: ${p => p.theme.space[5]};\n  grid-column-gap: ${p => p.theme.space[5]};\n  /* justify-content: space-between; */\n  align-items: center;\n  gap: ${p => p.theme.space[4]};\n  font-size: ${p => p.theme.fontsSizes.m}px;\n\n  &:nth-of-type(2n) {\n    background-color: ${p => p.theme.colors.bgGrey};\n    border-radius: ${p => p.theme.radii.generic};\n  }\n`;\n\nexport const ContactText = styled.p`\n  font-weight: ${p => p.theme.fontWeights.semiBold};\n  text-align: start;\n`;\n\nexport const RemoveContactButton = styled.button`\n  min-width: 48px;\n  height: 24px;\n\n  padding: 2px 2px;\n\n  color: ${p => p.theme.colors.black};\n  background-color: ${p => p.theme.colors.bgGrey};\n\n  font-size: ${p => p.theme.fontsSizes.s}px;\n  font-weight: ${p => p.theme.fontWeights.semiBold};\n\n  border: 2px solid ${p => p.theme.colors.lightRed};\n  border-radius: ${p => p.theme.radii.semiRound};\n\n  cursor: pointer;\n  transition: background-color 250ms ease-out 0s, border-color 250ms ease-out 0s;\n\n  &:hover,\n  :focus {\n    background-color: ${p => p.theme.colors.lightRed};\n    border: 2px solid transparent;\n  }\n`;\n\nexport const UpdateContactButton = styled.button`\n  min-width: 48px;\n  height: 24px;\n\n  padding: 2px 2px;\n\n  color: ${p => p.theme.colors.black};\n  background-color: ${p => p.theme.colors.bgGrey};\n\n  font-size: ${p => p.theme.fontsSizes.s}px;\n  font-weight: ${p => p.theme.fontWeights.semiBold};\n\n  border: 2px solid ${p => p.theme.colors.accentShadow};\n  border-radius: ${p => p.theme.radii.semiRound};\n\n  cursor: pointer;\n  transition: background-color 250ms ease-out 0s, border-color 250ms ease-out 0s;\n\n  &:hover,\n  :focus {\n    background-color: ${p => p.theme.colors.accentShadow};\n    border: 2px solid transparent;\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const DialogForm = styled.form`\n  width: 400px;\n  margin-bottom: ${p => p.theme.space[3]};\n  padding: ${p => p.theme.space[3]};\n  border: 1px solid ${p => p.theme.colors.grey};\n  border-radius: ${p => p.theme.radii.generic};\n\n  margin-left: auto;\n  margin-right: auto;\n\n  text-align: center;\n`;\n\nexport const DialogLabel = styled.label`\n  display: block;\n\n  margin-bottom: ${p => p.theme.space[3]};\n\n  font-size: ${p => p.theme.fontsSizes.m}px;\n  font-weight: ${p => p.theme.fontWeights.semiBold}; ;\n`;\n\nexport const DialogInput = styled.input`\n  display: block;\n\n  margin: ${p => p.theme.space[2]} auto ${p => p.theme.space[0]};\n  width: 320px;\n  padding: ${p => p.theme.space[2]};\n\n  font-size: ${p => p.theme.fontsSizes.s}px;\n\n  border: 1px solid transparent;\n  border-radius: ${p => p.theme.radii.semiRound};\n  background-color: ${p => p.theme.colors.bgGrey};\n\n  transition: border 250ms ease-out 0s, background-color 250ms ease-out 0s;\n\n  &:focus-within {\n    border: 1px solid ${p => p.theme.colors.grey};\n    background-color: rgb(245, 248, 250);\n    filter: drop-shadow(${p => p.theme.colors.accentShadow} 0px 4px 4px);\n    outline: none;\n  }\n\n  :focus::placeholder {\n    color: transparent;\n  }\n`;\n\n// export const AddContactButton = styled.button`\n//   min-width: 80px;\n//   height: 40px;\n\n//   padding: 4px 16px;\n\n//   color: ${p => p.theme.colors.black};\n//   background-color: ${p => p.theme.colors.bgGrey};\n\n//   font-size: ${p => p.theme.fontsSizes.m}px;\n//   font-weight: ${p => p.theme.fontWeights.semiBold};\n\n//   border: 2px solid ${p => p.theme.colors.accentShadow};\n//   border-radius: ${p => p.theme.radii.semiRound};\n\n//   cursor: pointer;\n//   transition: background-color 250ms ease-out 0s, border-color 250ms ease-out 0s;\n\n//   &:hover,\n//   :focus {\n//     background-color: ${p => p.theme.colors.accentShadow};\n//     border: 2px solid transparent;\n//   }\n// `;\n","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@mui/material/Button';\n// import { Box } from '@mui/system';\nimport { styled } from '@mui/material/styles';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContent from '@mui/material/DialogContent';\n// import DialogActions from '@mui/material/DialogActions';\nimport IconButton from '@mui/material/IconButton';\nimport CloseIcon from '@mui/icons-material/Close';\n// import Typography from '@mui/material/Typography';\nimport { Notify } from 'notiflix';\nimport { capitalizeFirstLetters } from 'components/Utils';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from '../../redux/selectors';\n\nimport { UpdateContactButton } from '../ContactList/ContactListItem/ContactListItem.styled';\nimport { DialogForm, DialogLabel, DialogInput } from './UpdateDialog.styled';\nimport { updateContactAsyncThunk } from '../../redux/contacts/contactsOperations';\n\nconst BootstrapDialog = styled(Dialog)(({ theme }) => ({\n  '& .MuiDialogContent-root': {\n    padding: theme.spacing(2),\n  },\n  '& .MuiDialogActions-root': {\n    padding: theme.spacing(1),\n  },\n}));\n\nfunction BootstrapDialogTitle(props) {\n  const { children, onClose, ...other } = props;\n\n  return (\n    <DialogTitle sx={{ m: 0, p: 2 }} {...other}>\n      {children}\n      {onClose ? (\n        <IconButton\n          aria-label=\"close\"\n          onClick={onClose}\n          sx={{\n            position: 'absolute',\n            right: 8,\n            top: 8,\n            color: theme => theme.palette.grey[500],\n          }}\n        >\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </DialogTitle>\n  );\n}\n\nBootstrapDialogTitle.propTypes = {\n  children: PropTypes.node,\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default function CustomizedDialogs({ name, number, contactId }) {\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const contacts = useSelector(selectContacts);\n\n  const dispatch = useDispatch();\n\n  const checkTheSameName = inputName => {\n    if (!contacts) return;\n\n    const normaliziedInputName = inputName.toLowerCase().trim();\n    // console.log(normaliziedInputName);\n\n    return contacts.find(\n      ({ name }) => name.toLowerCase() === normaliziedInputName\n    );\n  };\n\n  const onSubmit = event => {\n    event.preventDefault();\n\n    const data = new FormData(event.target);\n\n    const formObject = Object.fromEntries(data.entries());\n\n    const { name: inputName, number: inputNumber } = formObject;\n\n    const capitalName = capitalizeFirstLetters(inputName);\n\n    if (checkTheSameName(inputName)) {\n      alert(`Sorry, ${capitalName} has already added!`);\n      return;\n    }\n\n    dispatch(\n      updateContactAsyncThunk({\n        contact: { name: capitalName, number: inputNumber },\n        contactId,\n      })\n    );\n\n    Notify.success('Contact has updated!');\n\n    event.currentTarget.reset();\n  };\n\n  return (\n    <div>\n      <UpdateContactButton variant=\"outlined\" onClick={handleClickOpen}>\n        Update\n      </UpdateContactButton>\n      <BootstrapDialog\n        onClose={handleClose}\n        aria-labelledby=\"customized-dialog-title\"\n        open={open}\n      >\n        <BootstrapDialogTitle\n          id=\"customized-dialog-title\"\n          onClose={handleClose}\n        >\n          Update contact details\n        </BootstrapDialogTitle>\n        <DialogContent dividers>\n          <DialogForm onSubmit={onSubmit}>\n            <DialogLabel>\n              Name\n              <DialogInput\n                type=\"text\"\n                name=\"name\"\n                placeholder=\"FirstName LastName\"\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я-яЁёІіЇїЄє]*)*$\"\n                title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                required\n                // autoFocus\n                // onChange={onInputChange}\n              />\n            </DialogLabel>\n            <DialogLabel>\n              Number\n              <DialogInput\n                type=\"tel\"\n                name=\"number\"\n                placeholder=\"123-45-67\"\n                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                required\n                // onChange={onInputChange}\n              />\n            </DialogLabel>\n            <Button\n              type=\"submit\"\n              autoFocus\n              onClick={handleClose}\n              onSubmit={onSubmit}\n              sx={{ marginLeft: 'auto', marginRight: 'auto' }}\n            >\n              Save changes\n            </Button>\n          </DialogForm>\n        </DialogContent>\n        {/* <DialogActions></DialogActions> */}\n      </BootstrapDialog>\n    </div>\n  );\n}\n\nCustomizedDialogs.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  contactId: PropTypes.string.isRequired,\n};\n","import { PropTypes } from 'prop-types';\nimport { capitalizeFirstLetters } from '../../Utils/capitalizeFirstLetters';\nimport { Notify } from 'notiflix';\n\nimport {\n  Icon,\n  ListItem,\n  ContactText,\n  RemoveContactButton,\n  // UpdateContactButton,\n} from './ContactListItem.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectStatus } from 'redux/selectors';\nimport {\n  deleteContactAsyncThunk,\n  // updateContactAsyncThunk,\n} from 'redux/contacts/contactsOperations';\nimport CustomizedDialogs from '../../UpdateDialog/UpdateDialog';\n\nexport function ContactListItem(props) {\n  const state = useSelector(selectStatus);\n\n  const dispatch = useDispatch();\n\n  const {\n    contactInfo: { name, number, id },\n    // onContactDelete,\n  } = props;\n\n  const handleDelete = id => {\n    Notify.warning('Contacts has deleted');\n    return dispatch(deleteContactAsyncThunk(id));\n  };\n\n  const capitalName = capitalizeFirstLetters(name);\n\n  return (\n    <ListItem>\n      <Icon />\n      <ContactText>\n        {capitalName}: {number}\n      </ContactText>\n      <CustomizedDialogs name={capitalName} number={number} contactId={id} />\n      <RemoveContactButton\n        type=\"button\"\n        onClick={() => handleDelete(id)}\n        disabled={state === 'loading'}\n      >\n        {/* {state === 'loading' ? 'Removing' : 'Remove'} */}\n        Remove\n      </RemoveContactButton>\n    </ListItem>\n  );\n}\n\nContactListItem.propTypes = {\n  contactInfo: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n  }),\n};\n","import styled from '@emotion/styled';\n\nexport const ContactsList = styled.ul`\n  display: flex;\n  flex-direction: column;\n\n  width: 500px;\n  margin-bottom: ${p => p.theme.space[3]};\n  padding: ${p => p.theme.space[3]};\n  border: 1px solid ${p => p.theme.colors.grey};\n  border-radius: ${p => p.theme.radii.generic};\n\n  margin-left: auto;\n  margin-right: auto;\n\n  /* text-align: start; */\n`;\n\nexport const ContactsMessage = styled.span`\n  font-size: ${p => p.theme.fontsSizes.m}px;\n  font-weight: ${p => p.theme.fontWeights.semiBold};\n`;\n","import { ContactListItem } from './ContactListItem/ContactListItem';\n\nimport { ContactsList, ContactsMessage } from './ContactList.styled';\nimport { Loader } from 'components/Loader/Loader';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect, useMemo } from 'react';\n\nimport { selectContacts, selectFilter, selectStatus } from 'redux/selectors';\nimport { contactsAsyncThunk } from 'redux/contacts/contactsOperations';\n\nexport function ContactList() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const state = useSelector(selectStatus);\n  const filter = useSelector(selectFilter);\n\n  useEffect(() => {\n    dispatch(contactsAsyncThunk());\n  }, [dispatch]);\n\n  const selectedContacts = useMemo(\n    () => contacts?.filter(({ name }) => name.toLowerCase().includes(filter)),\n    [contacts, filter]\n  );\n\n  // const selectedContacts = (() => {\n  //   if (!contacts ) return;\n\n  //   return contacts.filter(({ name }) =>\n  //     // console.log(name.toLowerCase().includes(filter))\n  //     name.toLowerCase().includes(filter)\n  //   );\n  // })();\n\n  // console.log(contacts);\n\n  return (\n    <>\n      <ContactsList>\n        {state === 'idle' && (\n          // || state === 'loading'\n          <Loader />\n        )}\n\n        {selectedContacts?.length ? (\n          (selectedContacts ?? contacts).map(contact => (\n            <ContactListItem key={contact.id} contactInfo={contact} />\n          ))\n        ) : filter ? (\n          <ContactsMessage>We found nothing here:(</ContactsMessage>\n        ) : state === 'loading' ? (\n          <Loader />\n        ) : (\n          <ContactsMessage>Empty phonebook</ContactsMessage>\n        )}\n\n        {state === 'error' && (\n          <ContactsMessage>\n            Something went wrong, try again later:(\n          </ContactsMessage>\n        )}\n      </ContactsList>\n    </>\n  );\n}\n","import { useDispatch } from 'react-redux';\nimport { useMemo } from 'react';\nimport { filterContact } from '../../redux/filter/filterSlice';\nimport debounce from 'lodash.debounce';\n\nimport { Label, Input } from '../ContactForm/ContactForm.styled';\n\nexport function Filter() {\n  const dispatch = useDispatch();\n\n  const onFilterInput = event => {\n    const filterInputValue = event.target.value.toLocaleLowerCase();\n\n    dispatch(filterContact(filterInputValue));\n  };\n\n  const debouncedFilterHandler = useMemo(\n    () => debounce(onFilterInput, 500),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    []\n  );\n\n  return (\n    <Label>\n      Filter contacts by name\n      <Input\n        onInput={debouncedFilterHandler}\n        name=\"search\"\n        placeholder=\"Search\"\n        // value={value}\n      />\n    </Label>\n  );\n}\n","import {\n  Container,\n  MainTitle,\n  SecondaryTitle,\n} from '../../components/App.styled';\n\nimport { ContactForm } from '../../components/ContactForm/ContactForm';\nimport { ContactList } from '../../components/ContactList/ContactList';\nimport { Filter } from '../../components/Filter/Filter';\n\nexport default function Contacts() {\n  return (\n    <Container>\n      <MainTitle>Phonebook</MainTitle>\n      <ContactForm />\n\n      <SecondaryTitle>Contacts</SecondaryTitle>\n      <Filter />\n      <ContactList />\n    </Container>\n  );\n}\n"],"names":["Container","styled","p","theme","space","MainTitle","fontsSizes","xl","colors","bgGrey","SecondaryTitle","l","HomeImage","WatchWrapper","Loader","color","height","width","radius","ariaLabel","wrapperStyle","wrapperClassName","visible","Form","grey","radii","generic","Label","m","fontWeights","semiBold","Input","s","semiRound","accentShadow","AddContactButton","black","ContactForm","contacts","useSelector","selectContacts","state","selectStatus","dispatch","useDispatch","onSubmit","event","preventDefault","data","FormData","target","formObject","Object","fromEntries","entries","inputName","name","inputNumber","number","capitalName","capitalizeFirstLetters","normaliziedInputName","toLowerCase","trim","find","checkTheSameName","Notify","addContactAsyncThunk","currentTarget","reset","alert","type","placeholder","pattern","title","required","disabled","Icon","FcContacts","ListItem","ContactText","RemoveContactButton","lightRed","UpdateContactButton","DialogForm","DialogLabel","DialogInput","BootstrapDialog","Dialog","padding","spacing","BootstrapDialogTitle","props","children","onClose","other","DialogTitle","sx","IconButton","onClick","position","right","top","palette","Close","CustomizedDialogs","contactId","React","open","setOpen","handleClose","updateContactAsyncThunk","contact","variant","id","DialogContent","dividers","Button","autoFocus","marginLeft","marginRight","ContactListItem","contactInfo","deleteContactAsyncThunk","handleDelete","ContactsList","ContactsMessage","ContactList","filter","selectFilter","useEffect","contactsAsyncThunk","selectedContacts","useMemo","includes","length","map","Filter","onFilterInput","filterInputValue","value","toLocaleLowerCase","filterContact","debouncedFilterHandler","debounce","onInput","Contacts"],"sourceRoot":""}